{"ast":null,"code":"var _jsxFileName = \"/Users/abbadi/Desktop/personal-projects/prophet-descriptions-app/prophet/src/components/hadith/Text.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport dictionary from \"../../sources/dictionary.json\";\nimport { MDBPopover, MDBPopoverBody, MDBPopoverHeader } from \"mdb-react-ui-kit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Text(_ref) {\n  _s();\n\n  let {\n    text\n  } = _ref;\n  const [dict] = useState(JSON.parse(JSON.stringify(dictionary)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-dark\",\n      children: text.split(\" \").map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", dict[word] ? \"klklk\" : word]\n      }, `${word}_${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Text, \"MtzTWhfUf3tvoSqOJgpEkgvNvG4=\");\n\n_c = Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["React","useState","dictionary","MDBPopover","MDBPopoverBody","MDBPopoverHeader","Text","text","dict","JSON","parse","stringify","split","map","word","index"],"sources":["/Users/abbadi/Desktop/personal-projects/prophet-descriptions-app/prophet/src/components/hadith/Text.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport dictionary from \"../../sources/dictionary.json\";\nimport { MDBPopover, MDBPopoverBody, MDBPopoverHeader } from \"mdb-react-ui-kit\";\nexport default function Text({ text }) {\n  const [dict] = useState(JSON.parse(JSON.stringify(dictionary)));\n  return (\n    <div>\n      <p className=\"text-dark\">\n        {text.split(\" \").map((word, index) => (\n          <span key={`${word}_${index}`}> {dict[word] ? \"klklk\" : word}</span>\n        ))}\n      </p>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,gBAArC,QAA6D,kBAA7D;;AACA,eAAe,SAASC,IAAT,OAAwB;EAAA;;EAAA,IAAV;IAAEC;EAAF,CAAU;EACrC,MAAM,CAACC,IAAD,IAASP,QAAQ,CAACQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeT,UAAf,CAAX,CAAD,CAAvB;EACA,oBACE;IAAA,uBACE;MAAG,SAAS,EAAC,WAAb;MAAA,UACGK,IAAI,CAACK,KAAL,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,kBACnB;QAAA,gBAAiCP,IAAI,CAACM,IAAD,CAAJ,GAAa,OAAb,GAAuBA,IAAxD;MAAA,GAAY,GAAEA,IAAK,IAAGC,KAAM,EAA5B;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAXuBT,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}