{"ast":null,"code":"var _jsxFileName = \"/Users/abbadi/Desktop/personal-projects/prophet-descriptions-app/prophet/src/components/hadith/Text.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nimport dictionary from \"../../sources/dictionary.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Text(_ref) {\n  _s();\n\n  let {\n    text\n  } = _ref;\n  const [dict] = useState(JSON.parse(JSON.stringify(dictionary)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-dark\",\n      children: text.split(/( )/g).map((word, index) => {\n        if (word.includes(\"،\")) {\n          let stripedWord = word.split(/،/)[0];\n\n          if (dict[stripedWord]) {\n            return /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n              placement: \"top\",\n              overlay: /*#__PURE__*/_jsxDEV(Popover, {\n                id: stripedWord,\n                children: /*#__PURE__*/_jsxDEV(Popover.Body, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card\",\n                    style: {\n                      width: 18 + \"rem\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: dict[stripedWord].image,\n                      className: \"card-img-top\",\n                      alt: \"\\u0627\\u0644\\u0627\\u0645\\u0647\\u0642\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 24,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-body\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"card-text\",\n                        children: dict[stripedWord].des\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 30,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 29,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 23,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 22,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 21\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                type: \"button\",\n                className: \" text-primary\",\n                children: [stripedWord, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \" text-dark\",\n                  children: \"،\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 19\n              }, this)\n            }, `${stripedWord}_${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 17\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: word\n            }, `${word}_${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 22\n            }, this);\n          }\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            children: word\n          }, `${word}_${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 20\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Text, \"MtzTWhfUf3tvoSqOJgpEkgvNvG4=\");\n\n_c = Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["React","useState","OverlayTrigger","Popover","dictionary","Text","text","dict","JSON","parse","stringify","split","map","word","index","includes","stripedWord","width","image","des"],"sources":["/Users/abbadi/Desktop/personal-projects/prophet-descriptions-app/prophet/src/components/hadith/Text.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nimport dictionary from \"../../sources/dictionary.json\";\nexport default function Text({ text }) {\n  const [dict] = useState(JSON.parse(JSON.stringify(dictionary)));\n\n  return (\n    <div>\n      <p className=\"text-dark\">\n        {text.split(/( )/g).map((word, index) => {\n          if (word.includes(\"،\")) {\n            let stripedWord = word.split(/،/)[0];\n            if (dict[stripedWord]) {\n              return (\n                <OverlayTrigger\n                  key={`${stripedWord}_${index}`}\n                  placement=\"top\"\n                  overlay={\n                    <Popover id={stripedWord}>\n                      <Popover.Body>\n                        <div className=\"card\" style={{ width: 18 + \"rem\" }}>\n                          <img\n                            src={dict[stripedWord].image}\n                            className=\"card-img-top\"\n                            alt=\"الامهق\"\n                          />\n                          <div className=\"card-body\">\n                            <p className=\"card-text\">{dict[stripedWord].des}</p>\n                          </div>\n                        </div>\n                      </Popover.Body>\n                    </Popover>\n                  }\n                >\n                  <span type=\"button\" className=\" text-primary\">\n                    {stripedWord}\n                    <span className=\" text-dark\">{\"،\"}</span>\n                  </span>\n                </OverlayTrigger>\n              );\n            } else {\n              return <span key={`${word}_${index}`}>{word}</span>;\n            }\n          } else {\n            return <span key={`${word}_${index}`}>{word}</span>;\n          }\n        })}\n      </p>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;;AACA,eAAe,SAASC,IAAT,OAAwB;EAAA;;EAAA,IAAV;IAAEC;EAAF,CAAU;EACrC,MAAM,CAACC,IAAD,IAASN,QAAQ,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,UAAf,CAAX,CAAD,CAAvB;EAEA,oBACE;IAAA,uBACE;MAAG,SAAS,EAAC,WAAb;MAAA,UACGE,IAAI,CAACK,KAAL,CAAW,MAAX,EAAmBC,GAAnB,CAAuB,CAACC,IAAD,EAAOC,KAAP,KAAiB;QACvC,IAAID,IAAI,CAACE,QAAL,CAAc,GAAd,CAAJ,EAAwB;UACtB,IAAIC,WAAW,GAAGH,IAAI,CAACF,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAlB;;UACA,IAAIJ,IAAI,CAACS,WAAD,CAAR,EAAuB;YACrB,oBACE,QAAC,cAAD;cAEE,SAAS,EAAC,KAFZ;cAGE,OAAO,eACL,QAAC,OAAD;gBAAS,EAAE,EAAEA,WAAb;gBAAA,uBACE,QAAC,OAAD,CAAS,IAAT;kBAAA,uBACE;oBAAK,SAAS,EAAC,MAAf;oBAAsB,KAAK,EAAE;sBAAEC,KAAK,EAAE,KAAK;oBAAd,CAA7B;oBAAA,wBACE;sBACE,GAAG,EAAEV,IAAI,CAACS,WAAD,CAAJ,CAAkBE,KADzB;sBAEE,SAAS,EAAC,cAFZ;sBAGE,GAAG,EAAC;oBAHN;sBAAA;sBAAA;sBAAA;oBAAA,QADF,eAME;sBAAK,SAAS,EAAC,WAAf;sBAAA,uBACE;wBAAG,SAAS,EAAC,WAAb;wBAAA,UAA0BX,IAAI,CAACS,WAAD,CAAJ,CAAkBG;sBAA5C;wBAAA;wBAAA;wBAAA;sBAAA;oBADF;sBAAA;sBAAA;sBAAA;oBAAA,QANF;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA;gBADF;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QAJJ;cAAA,uBAoBE;gBAAM,IAAI,EAAC,QAAX;gBAAoB,SAAS,EAAC,eAA9B;gBAAA,WACGH,WADH,eAEE;kBAAM,SAAS,EAAC,YAAhB;kBAAA,UAA8B;gBAA9B;kBAAA;kBAAA;kBAAA;gBAAA,QAFF;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YApBF,GACQ,GAAEA,WAAY,IAAGF,KAAM,EAD/B;cAAA;cAAA;cAAA;YAAA,QADF;UA2BD,CA5BD,MA4BO;YACL,oBAAO;cAAA,UAAgCD;YAAhC,GAAY,GAAEA,IAAK,IAAGC,KAAM,EAA5B;cAAA;cAAA;cAAA;YAAA,QAAP;UACD;QACF,CAjCD,MAiCO;UACL,oBAAO;YAAA,UAAgCD;UAAhC,GAAY,GAAEA,IAAK,IAAGC,KAAM,EAA5B;YAAA;YAAA;YAAA;UAAA,QAAP;QACD;MACF,CArCA;IADH;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA4CD;;GA/CuBT,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}