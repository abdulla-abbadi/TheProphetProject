{"ast":null,"code":"var _jsxFileName = \"/Users/abbadi/Desktop/personal-projects/prophet-descriptions-app/prophet/src/components/hadith/Text.jsx\",\n    _s = $RefreshSig$();\n\nimport { random } from \"fontawesome\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nimport dictionary from \"../../sources/dictionary.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Text(_ref) {\n  _s();\n\n  let {\n    text\n  } = _ref;\n  const [dict] = useState(JSON.parse(JSON.stringify(dictionary)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [Object.entries(dict).map(_ref2 => {\n      let [key] = _ref2;\n      let regex = new RegExp(`[ء-٩]*${key}`, \"g\");\n      let keywords = text.replace(regex, /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"red\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this));\n      text = keywords;\n    }), text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Text, \"MtzTWhfUf3tvoSqOJgpEkgvNvG4=\");\n\n_c = Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["random","React","useState","OverlayTrigger","Popover","dictionary","Text","text","dict","JSON","parse","stringify","Object","entries","map","key","regex","RegExp","keywords","replace","color"],"sources":["/Users/abbadi/Desktop/personal-projects/prophet-descriptions-app/prophet/src/components/hadith/Text.jsx"],"sourcesContent":["import { random } from \"fontawesome\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nimport dictionary from \"../../sources/dictionary.json\";\nexport default function Text({ text }) {\n  const [dict] = useState(JSON.parse(JSON.stringify(dictionary)));\n\n  return (\n    <div>\n      {Object.entries(dict).map(([key]) => {\n        let regex = new RegExp(`[ء-٩]*${key}`, \"g\");\n        let keywords = text.replace(\n          regex,\n          <span style={{ color: \"red\" }}></span>\n        );\n        text = keywords;\n      })}\n      {text}\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;;AACA,eAAe,SAASC,IAAT,OAAwB;EAAA;;EAAA,IAAV;IAAEC;EAAF,CAAU;EACrC,MAAM,CAACC,IAAD,IAASN,QAAQ,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,UAAf,CAAX,CAAD,CAAvB;EAEA,oBACE;IAAA,WACGO,MAAM,CAACC,OAAP,CAAeL,IAAf,EAAqBM,GAArB,CAAyB,SAAW;MAAA,IAAV,CAACC,GAAD,CAAU;MACnC,IAAIC,KAAK,GAAG,IAAIC,MAAJ,CAAY,SAAQF,GAAI,EAAxB,EAA2B,GAA3B,CAAZ;MACA,IAAIG,QAAQ,GAAGX,IAAI,CAACY,OAAL,CACbH,KADa,eAEb;QAAM,KAAK,EAAE;UAAEI,KAAK,EAAE;QAAT;MAAb;QAAA;QAAA;QAAA;MAAA,QAFa,CAAf;MAIAb,IAAI,GAAGW,QAAP;IACD,CAPA,CADH,EASGX,IATH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GAhBuBD,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}