{"ast":null,"code":"var _jsxFileName = \"/Users/abbadi/Desktop/personal-projects/prophet-descriptions-app/prophet/src/components/hadith/Text.jsx\",\n    _s = $RefreshSig$();\n\nimport { random } from \"fontawesome\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nimport dictionary from \"../../sources/dictionary.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Text(_ref) {\n  _s();\n\n  let {\n    text\n  } = _ref;\n  const [dict] = useState(JSON.parse(JSON.stringify(dictionary)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.entries(dict).map((_ref2, i) => {\n      let [k, v] = _ref2;\n      return [k, fn(v, k, i)];\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Text, \"MtzTWhfUf3tvoSqOJgpEkgvNvG4=\");\n\n_c = Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["random","React","useState","OverlayTrigger","Popover","dictionary","Text","text","dict","JSON","parse","stringify","Object","entries","map","i","k","v","fn"],"sources":["/Users/abbadi/Desktop/personal-projects/prophet-descriptions-app/prophet/src/components/hadith/Text.jsx"],"sourcesContent":["import { random } from \"fontawesome\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nimport dictionary from \"../../sources/dictionary.json\";\nexport default function Text({ text }) {\n  const [dict] = useState(JSON.parse(JSON.stringify(dictionary)));\n\n  return (\n    <div>\n      {Object.entries(dict).map(([k, v], i) => [k, fn(v, k, i)])}\n      {/* {Object.keys(dict).forEach((key) => {\n        // let words = new RegExp(`[،-٩]+${key}`, \"g\");\n        // let keywords = text.match(words);\n        // if (keywords) keywords.map((word) => <p>{word}</p>);\n        <span>{key}</span>;\n      })} */}\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;;AACA,eAAe,SAASC,IAAT,OAAwB;EAAA;;EAAA,IAAV;IAAEC;EAAF,CAAU;EACrC,MAAM,CAACC,IAAD,IAASN,QAAQ,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,UAAf,CAAX,CAAD,CAAvB;EAEA,oBACE;IAAA,UACGO,MAAM,CAACC,OAAP,CAAeL,IAAf,EAAqBM,GAArB,CAAyB,QAASC,CAAT;MAAA,IAAC,CAACC,CAAD,EAAIC,CAAJ,CAAD;MAAA,OAAe,CAACD,CAAD,EAAIE,EAAE,CAACD,CAAD,EAAID,CAAJ,EAAOD,CAAP,CAAN,CAAf;IAAA,CAAzB;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAduBT,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}