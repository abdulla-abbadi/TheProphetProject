{"ast":null,"code":"var _jsxFileName = \"/Users/abbadi/Desktop/personal-projects/prophet-descriptions-app/prophet/src/components/hadith/Text.jsx\",\n    _s = $RefreshSig$();\n\nimport { random } from \"fontawesome\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nimport dictionary from \"../../sources/dictionary.json\";\nimport dictionary_keys from \"../../sources/dictionary_keys.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Text(_ref) {\n  _s();\n\n  let {\n    text\n  } = _ref;\n  const [dict] = useState(JSON.parse(JSON.stringify(dictionary)));\n  const [dict_keys] = useState(JSON.parse(JSON.stringify(dictionary_keys)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: get_all_matched_words(text, dict_keys)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Text, \"s4MjzcTSKo/UCZrQ4aKBMwrtl2I=\");\n\n_c = Text;\n\nfunction get_all_matched_words(text, dict_keys) {\n  const words = text.split(\" \");\n  let matched_words = [];\n\n  for (const word of words) {\n    for (const key of dict_keys) {\n      const regex = new RegExp(`[ء-٩]*(${key})[ء-٩]*`, \"g\");\n\n      if (word.match(regex)) {\n        matched_words.push([word, key]);\n      }\n    }\n  }\n\n  return matched_words;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["random","React","useState","OverlayTrigger","Popover","dictionary","dictionary_keys","Text","text","dict","JSON","parse","stringify","dict_keys","get_all_matched_words","words","split","matched_words","word","key","regex","RegExp","match","push"],"sources":["/Users/abbadi/Desktop/personal-projects/prophet-descriptions-app/prophet/src/components/hadith/Text.jsx"],"sourcesContent":["import { random } from \"fontawesome\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nimport dictionary from \"../../sources/dictionary.json\";\nimport dictionary_keys from \"../../sources/dictionary_keys.json\";\nexport default function Text({ text }) {\n  const [dict] = useState(JSON.parse(JSON.stringify(dictionary)));\n  const [dict_keys] = useState(JSON.parse(JSON.stringify(dictionary_keys)));\n  return <div>{get_all_matched_words(text, dict_keys)}</div>;\n}\n\nfunction get_all_matched_words(text, dict_keys) {\n  const words = text.split(\" \");\n  let matched_words = [];\n  for (const word of words) {\n    for (const key of dict_keys) {\n      const regex = new RegExp(`[ء-٩]*(${key})[ء-٩]*`, \"g\");\n      if (word.match(regex)) {\n        matched_words.push([word, key]);\n      }\n    }\n  }\n\n  return matched_words;\n}\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;;AACA,eAAe,SAASC,IAAT,OAAwB;EAAA;;EAAA,IAAV;IAAEC;EAAF,CAAU;EACrC,MAAM,CAACC,IAAD,IAASP,QAAQ,CAACQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeP,UAAf,CAAX,CAAD,CAAvB;EACA,MAAM,CAACQ,SAAD,IAAcX,QAAQ,CAACQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,eAAf,CAAX,CAAD,CAA5B;EACA,oBAAO;IAAA,UAAMQ,qBAAqB,CAACN,IAAD,EAAOK,SAAP;EAA3B;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;GAJuBN,I;;KAAAA,I;;AAMxB,SAASO,qBAAT,CAA+BN,IAA/B,EAAqCK,SAArC,EAAgD;EAC9C,MAAME,KAAK,GAAGP,IAAI,CAACQ,KAAL,CAAW,GAAX,CAAd;EACA,IAAIC,aAAa,GAAG,EAApB;;EACA,KAAK,MAAMC,IAAX,IAAmBH,KAAnB,EAA0B;IACxB,KAAK,MAAMI,GAAX,IAAkBN,SAAlB,EAA6B;MAC3B,MAAMO,KAAK,GAAG,IAAIC,MAAJ,CAAY,UAASF,GAAI,SAAzB,EAAmC,GAAnC,CAAd;;MACA,IAAID,IAAI,CAACI,KAAL,CAAWF,KAAX,CAAJ,EAAuB;QACrBH,aAAa,CAACM,IAAd,CAAmB,CAACL,IAAD,EAAOC,GAAP,CAAnB;MACD;IACF;EACF;;EAED,OAAOF,aAAP;AACD"},"metadata":{},"sourceType":"module"}