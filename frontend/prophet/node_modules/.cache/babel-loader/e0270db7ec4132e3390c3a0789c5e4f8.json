{"ast":null,"code":"var _jsxFileName = \"/Users/abbadi/Desktop/personal-projects/prophet-descriptions-app/prophet-hadiths-projects/frontend/prophet/src/components/hadith/Text.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useContext } from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nimport { DictionaryContext } from \"../../Contexts/DictionaryContext\";\nimport { split_on_matched_words, add_definations_for_matched_words } from \"../../utils/MatchingWords\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Text(_ref) {\n  _s();\n\n  let {\n    text\n  } = _ref;\n  const dict = useContext(DictionaryContext);\n  const dict_keys = Object.keys(dict);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: add_definations_for_matched_words(split_on_matched_words(text, dict_keys), dict_keys, dict).map(segment => {\n      return typeof segment === \"string\" ? segment : /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n        placement: \"top\",\n        overlay: /*#__PURE__*/_jsxDEV(Popover, {\n          id: segment[0],\n          children: /*#__PURE__*/_jsxDEV(Popover.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: segment[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          type: \"button\",\n          className: \" text-primary\",\n          children: [segment[0], /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \" text-dark\",\n            children: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, `${segment[0]}_${Math.floor(Math.random(0, 100) * 1000)}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Text, \"w3IYoYf7Zk2/8LNB5tzJqkZ9uQ4=\");\n\n_c = Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["React","useState","useContext","OverlayTrigger","Popover","DictionaryContext","split_on_matched_words","add_definations_for_matched_words","Text","text","dict","dict_keys","Object","keys","map","segment","Math","floor","random"],"sources":["/Users/abbadi/Desktop/personal-projects/prophet-descriptions-app/prophet-hadiths-projects/frontend/prophet/src/components/hadith/Text.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useContext } from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\nimport { DictionaryContext } from \"../../Contexts/DictionaryContext\";\nimport {\n  split_on_matched_words,\n  add_definations_for_matched_words,\n} from \"../../utils/MatchingWords\";\nexport default function Text({ text }) {\n  const dict = useContext(DictionaryContext);\n  const dict_keys = Object.keys(dict);\n  return (\n    <div>\n      {add_definations_for_matched_words(\n        split_on_matched_words(text, dict_keys),\n        dict_keys,\n        dict\n      ).map((segment) => {\n        return typeof segment === \"string\" ? (\n          segment\n        ) : (\n          <OverlayTrigger\n            key={`${segment[0]}_${Math.floor(Math.random(0, 100) * 1000)}`}\n            placement=\"top\"\n            overlay={\n              <Popover id={segment[0]}>\n                <Popover.Body>\n                  <div className=\"card-body\">\n                    <p className=\"card-text\">{segment[1]}</p>\n                  </div>\n                </Popover.Body>\n              </Popover>\n            }\n          >\n            <span type=\"button\" className=\" text-primary\">\n              {segment[0]}\n              <span className=\" text-dark\">{\"\"}</span>\n            </span>\n          </OverlayTrigger>\n        );\n      })}\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,SACEC,sBADF,EAEEC,iCAFF,QAGO,2BAHP;;AAIA,eAAe,SAASC,IAAT,OAAwB;EAAA;;EAAA,IAAV;IAAEC;EAAF,CAAU;EACrC,MAAMC,IAAI,GAAGR,UAAU,CAACG,iBAAD,CAAvB;EACA,MAAMM,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYH,IAAZ,CAAlB;EACA,oBACE;IAAA,UACGH,iCAAiC,CAChCD,sBAAsB,CAACG,IAAD,EAAOE,SAAP,CADU,EAEhCA,SAFgC,EAGhCD,IAHgC,CAAjC,CAICI,GAJD,CAIMC,OAAD,IAAa;MACjB,OAAO,OAAOA,OAAP,KAAmB,QAAnB,GACLA,OADK,gBAGL,QAAC,cAAD;QAEE,SAAS,EAAC,KAFZ;QAGE,OAAO,eACL,QAAC,OAAD;UAAS,EAAE,EAAEA,OAAO,CAAC,CAAD,CAApB;UAAA,uBACE,QAAC,OAAD,CAAS,IAAT;YAAA,uBACE;cAAK,SAAS,EAAC,WAAf;cAAA,uBACE;gBAAG,SAAS,EAAC,WAAb;gBAAA,UAA0BA,OAAO,CAAC,CAAD;cAAjC;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAJJ;QAAA,uBAaE;UAAM,IAAI,EAAC,QAAX;UAAoB,SAAS,EAAC,eAA9B;UAAA,WACGA,OAAO,CAAC,CAAD,CADV,eAEE;YAAM,SAAS,EAAC,YAAhB;YAAA,UAA8B;UAA9B;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MAbF,GACQ,GAAEA,OAAO,CAAC,CAAD,CAAI,IAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAe,GAAf,IAAsB,IAAjC,CAAuC,EAD/D;QAAA;QAAA;QAAA;MAAA,QAHF;IAsBD,CA3BA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD;;GAnCuBV,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}